{"ast":null,"code":"var _jsxFileName = \"/Users/denniskingston/Desktop/method/frontend/my-app/src/dashboard/Deposits.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nconst [accountRes, branchesRes] = await Promise.all([axios.get('http://127.0.0.1:4000/accounts/source'), axios.get('http://127.0.0.1:4000/transactions/branch')]);\nconst {\n  distinctAccounts\n} = accountRes.data;\nconst accountsMap = {};\nconst accountNames = distinctAccounts.map(account => {\n  const name = account.routingNumber + ' ' + account.accountNumber;\n  accountsMap[name] = account._id;\n  return name;\n});\nconst branches = branchesRes.data;\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nexport default function Deposits(props) {\n  _s();\n  // we are going to have filters to filter by branch etc.\n  // we need to call the backend to populate all the different branches and accounts\n  // the onChange function will need to query the db to get the aggregated r\n  const {\n    title,\n    sourceType\n  } = props;\n  const theme = useTheme();\n  const [source, setSource] = React.useState('');\n  const [amount, setAmount] = React.useState('$0');\n  const names = sourceType === 'Account' ? accountNames : branches;\n  const handleAccountChange = async event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSource(value);\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/account/${accountsMap[value]}`);\n    const amount = res.data;\n    setAmount(`$${amount}`);\n  };\n  const handleBranchChange = async event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSource(value);\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/branch/${value}`);\n    const amount = res.data;\n    setAmount(`$${amount}`);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"h4\",\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: sourceType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: source,\n          label: sourceType,\n          onChange: sourceType === 'Account' ? handleAccountChange : handleBranchChange,\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            style: getStyles(name, source, theme),\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Deposits, \"ix5OqFsHxsROzTkBKJEYfvC9GnY=\", false, function () {\n  return [useTheme];\n});\n_c = Deposits;\nvar _c;\n$RefreshReg$(_c, \"Deposits\");","map":{"version":3,"names":["React","useTheme","Typography","Title","InputLabel","MenuItem","FormControl","Select","axios","jsxDEV","_jsxDEV","preventDefault","event","accountRes","branchesRes","Promise","all","get","distinctAccounts","data","accountsMap","accountNames","map","account","name","routingNumber","accountNumber","_id","branches","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Deposits","props","_s","title","sourceType","source","setSource","useState","amount","setAmount","names","handleAccountChange","target","value","res","handleBranchChange","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","fullWidth","id","labelId","label","onChange","style","_c","$RefreshReg$"],"sources":["/Users/denniskingston/Desktop/method/frontend/my-app/src/dashboard/Deposits.js"],"sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios'\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst [accountRes, branchesRes] = await Promise.all([\n  axios.get('http://127.0.0.1:4000/accounts/source'),\n  axios.get('http://127.0.0.1:4000/transactions/branch')\n])\nconst { distinctAccounts } = accountRes.data\nconst accountsMap = {}\nconst accountNames = distinctAccounts.map(account => {\nconst name = account.routingNumber + ' ' + account.accountNumber\naccountsMap[name] = account._id\nreturn name\n})\n\nconst branches = branchesRes.data\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function Deposits(props) {\n\n  // we are going to have filters to filter by branch etc.\n  // we need to call the backend to populate all the different branches and accounts\n  // the onChange function will need to query the db to get the aggregated r\n  const { title, sourceType } = props\n  const theme = useTheme();\n  const [source, setSource] = React.useState('');\n  const [amount, setAmount] = React.useState('$0');\n\n  const names = sourceType === 'Account' ? accountNames : branches\n\n  const handleAccountChange = async(event) => {\n    const {\n      target: { value },\n    } = event;\n    setSource(value);\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/account/${accountsMap[value]}`)\n    const amount = res.data\n    setAmount(`$${amount}`)\n  };\n\n  const handleBranchChange = async(event) => {\n    const {\n      target: { value },\n    } = event;\n    setSource(value);\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/branch/${value}`)\n    const amount = res.data\n    setAmount(`$${amount}`)\n  };\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {amount}\n      </Typography>\n      <div>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">{sourceType}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={source}\n          label={sourceType}\n          onChange={ sourceType === 'Account' ? handleAccountChange : handleBranchChange}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, source, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      </div>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}