{"ast":null,"code":"var _jsxFileName = \"/Users/denniskingston/Desktop/method/frontend/my-app/src/dashboard/Transaction.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transaction(props) {\n  _s();\n  const {\n    transactionInfo\n  } = props;\n  const [transaction, setTransaction] = React.useState(transactionInfo);\n  const updateTransactionStatus = (event, transactionStatus) => {\n    console.log(transactionStatus);\n    event.preventDefault();\n    setTransaction({\n      ...transaction,\n      status: !transaction.status\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction.payorEIN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction.payeeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction.employeeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction.accountNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: transaction.payeeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: `$${transaction.amount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: transaction.accepted.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          component: \"label\",\n          variant: \"outlined\",\n          sx: {\n            marginRight: \"1rem\"\n          },\n          onClick: event => {\n            updateTransactionStatus(event, transactionStatus);\n          },\n          children: (!transaction.accepted).toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, transaction._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Transaction, \"rvn6+8FcWc8ltDCxiRWExK9l8mU=\");\n_c = Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","TableCell","TableRow","Button","jsxDEV","_jsxDEV","Transaction","props","_s","transactionInfo","transaction","setTransaction","useState","updateTransactionStatus","event","transactionStatus","console","log","preventDefault","status","Fragment","children","_id","fileName","_jsxFileName","lineNumber","columnNumber","payorEIN","payeeId","employeeId","accountNumber","align","amount","accepted","toString","component","variant","sx","marginRight","onClick","_c","$RefreshReg$"],"sources":["/Users/denniskingston/Desktop/method/frontend/my-app/src/dashboard/Transaction.js"],"sourcesContent":["import * as React from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { Button } from '@mui/material';\n\nexport default function Transaction(props) {\n  const { transactionInfo } = props\n\n  const [transaction, setTransaction] = React.useState(transactionInfo);\n\n\n  const updateTransactionStatus = (event, transactionStatus) => {\n    console.log(transactionStatus);\n    event.preventDefault();\n    setTransaction({\n      ...transaction,\n      status: !transaction.status\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow key={transaction._id}>\n      <TableCell>{transaction._id}</TableCell>\n      <TableCell>{transaction.payorEIN}</TableCell>\n      <TableCell>{transaction.payeeId}</TableCell>\n      <TableCell>{transaction.employeeId}</TableCell>\n      <TableCell>{transaction.accountNumber}</TableCell>\n      <TableCell>{transaction.payeeId}</TableCell>\n      <TableCell align=\"center\">{`$${transaction.amount}`}</TableCell>\n      <TableCell align=\"center\">{transaction.accepted.toString()}</TableCell>\n      <TableCell align=\"center\">\n        <Button\n          component=\"label\"\n          variant=\"outlined\"\n          sx={{ marginRight: \"1rem\" }}\n          onClick={(event) => {updateTransactionStatus(event, transactionStatus)}}\n        >\n          {(!transaction.accepted).toString()}\n        </Button>\n      </TableCell>\n    </TableRow>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}