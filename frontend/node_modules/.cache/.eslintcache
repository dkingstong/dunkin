[{"/Users/denniskingston/Desktop/method/dunkin/frontend/src/index.js":"1","/Users/denniskingston/Desktop/method/dunkin/frontend/src/App.js":"2","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Dashboard.js":"3","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Deposits.js":"4","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/FileUpload.js":"5","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Transactions.js":"6","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Title.js":"7","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Transaction.js":"8"},{"size":231,"mtime":1693837047632,"results":"9","hashOfConfig":"10"},{"size":161,"mtime":1693836884167,"results":"11","hashOfConfig":"10"},{"size":7581,"mtime":1694201202884,"results":"12","hashOfConfig":"10"},{"size":3035,"mtime":1694196009999,"results":"13","hashOfConfig":"10"},{"size":1906,"mtime":1694102124557,"results":"14","hashOfConfig":"10"},{"size":2963,"mtime":1694118714001,"results":"15","hashOfConfig":"10"},{"size":352,"mtime":1693840934705,"results":"16","hashOfConfig":"10"},{"size":1703,"mtime":1694128277307,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z3co1x",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/denniskingston/Desktop/method/dunkin/frontend/src/index.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/App.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Dashboard.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Deposits.js",["43"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport axios from 'axios'\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst [accountRes, branchesRes] = await Promise.all([\n  axios.get('http://127.0.0.1:4000/accounts/source'),\n  axios.get('http://127.0.0.1:4000/transactions/branches/list')\n])\nconst { distinctAccounts } = accountRes.data\nconst accountsMap = {}\nconst accountNames = distinctAccounts.map(account => {\nconst name = account.routingNumber + ' ' + account.accountNumber\naccountsMap[name] = account._id\nreturn name\n})\n\nconst branches = branchesRes.data\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function Deposits(props) {\n\n  // we are going to have filters to filter by branch etc.\n  // we need to call the backend to populate all the different branches and accounts\n  // the onChange function will need to query the db to get the aggregated r\n  const { title, sourceType } = props\n  const theme = useTheme();\n  const [source, setSource] = React.useState('');\n  const [amount, setAmount] = React.useState('$0');\n\n  const names = sourceType === 'Account' ? accountNames : branches\n\n  const handleAccountChange = async(event) => {\n    const {\n      target: { value },\n    } = event;\n    setSource(value);\n    console.log('******** value', value)\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/account/${accountsMap[value]}`)\n    const amount = res.data\n    setAmount(`$${amount}`)\n  };\n\n  const handleBranchChange = async(event) => {\n    const {\n      target: { value },\n    } = event;\n    setSource(value);\n    const res = await axios.get(`http://127.0.0.1:4000/transactions/metrics/branch/${value}`)\n    const amount = res.data\n    setAmount(`$${amount}`)\n  };\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {amount}\n      </Typography>\n      <div>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">{sourceType}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={source}\n          label={sourceType}\n          onChange={ sourceType === 'Account' ? handleAccountChange : handleBranchChange}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, source, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/FileUpload.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Transactions.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Title.js",[],[],"/Users/denniskingston/Desktop/method/dunkin/frontend/src/dashboard/Transaction.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":24},"no-unused-vars","'preventDefault' is defined but never used.","Identifier","unusedVar"]